#!/usr/bin/env python
# Inspired by https://jamey.thesharps.us/2019/05/29/per-project-postgres/
#
# This script creates:
#   .postgres-data/ - postgres data dir
#   .envrc - sets PG* envars for psql etc. to automatically use that dir
#
# Usage:
#   cd project-dir
#   standalone-postgres

import os
import subprocess
import sys
from getpass import getuser
from pathlib import Path

current_dir = Path(os.getcwd())
pg_dir = current_dir / ".postgres-data"
envrc = current_dir / ".envrc"

existing = []
if envrc.exists():
    existing.append(envrc.name)
if pg_dir.exists():
    existing.append(pg_dir.name)
if existing:
    print(f"Found existing: {', '.join(existing)}\nAborted")
    sys.exit(1)

with open(envrc, "w") as sf:
    sf.write(
        f"""\
#!/usr/bin/env bash
# put data dir inside project dir:
export PGDATA="{pg_dir}"
# put postgres unix socket inside data dir:
export PGHOST="{pg_dir}"
"""
    )

# Initialize postgres data dir
os.environ["PGDATA"] = str(pg_dir)
os.environ["PGHOST"] = str(pg_dir)
subprocess.run("initdb", shell=True)

# Make this postgres instance listen only on the unix socket
with open(pg_dir / "postgresql.conf", "a") as confile:
    confile.write(
        f"""
listen_addresses = ''
unix_socket_directories = '{pg_dir}'
"""
    )

# Create db using default the name postgres defaults to, which is the current username
p = subprocess.Popen(
    ["postgres", "--single", "-E", "postgres"],
    stdin=subprocess.PIPE,
)
p.communicate(input=f"CREATE DATABASE {getuser()};".encode())
