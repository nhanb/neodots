#!/usr/bin/env python
# Inspired by https://jamey.thesharps.us/2019/05/29/per-project-postgres/
#
# This script creates:
#   ./postgres/ - postgres data dir
#   ./setenv.sh - sets PG* envars for psql etc. to automatically use that dir
#
# Usage:
#   cd project-dir
#   standalone-postgres
#   . setenv.sh

import os
import subprocess
import sys
from getpass import getuser
from pathlib import Path

current_dir = Path(os.getcwd())
pg_dir = current_dir / "postgres"
setenv_file = current_dir / "setenv.sh"

should_abort = False
if setenv_file.exists():
    should_abort = True
    print("setenv.sh already exists!")
if pg_dir.exists():
    should_abort = True
    print("postgres dir already exists!")
if should_abort:
    print("Aborted.")
    sys.exit(1)

# Create setenv script
with open(setenv_file, "w") as sf:
    sf.write(
        f"""\
export PGDATA="{pg_dir}" # put data dir inside project dir
export PGHOST="{pg_dir}" # put postgres unix socket inside data dir
"""
    )

# Initialize postgres data dir
os.environ["PGDATA"] = str(pg_dir)
os.environ["PGHOST"] = str(pg_dir)
subprocess.run("initdb", shell=True)

# Make this postgres instance listen only on the unix socket
with open(pg_dir / "postgresql.conf", "a") as confile:
    confile.write(
        f"""
listen_addresses = ''
unix_socket_directories = '{pg_dir}'
"""
    )

# Create db using default the name postgres defaults to, which is the current username
p = subprocess.Popen(
    ["postgres", "--single", "-E", "postgres"],
    stdin=subprocess.PIPE,
)
p.communicate(input=f"CREATE DATABASE {getuser()};".encode())
